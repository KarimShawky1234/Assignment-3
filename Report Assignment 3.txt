Karim Shawky 900221948
Class.h:

	I started off by creating a Class called "Person" with atributes 	Name, ID, And age which are all set to 	default when called by the main program or other functions that inheret from the class, I created setters 	ands getters for all the name, ID, and Age variables which were public. The only thing that needs to be 	inhereted in this class is the Struct Appointment which was created with hours and 	minutes.

	The second class that was created Was the customer class which inhereted from class person, this class contains 	a menchanicID and appointment variables, setters and getters were also needed for this class, I also had to 	overload the <,>, and == operators to be able to compare the appointments of customers for that mechanic.

	The third and last class that needs to inheret from class Person was class mechanic which has counter (to count 	the number of mechanics), size (to declare an area for each mechanic) and finally a dynamic array called Arr 	which is used to store the appointments that each mechanic is assigned to. A function isAvailable() was created 	to check whether a mechanic is available at said time or not. the function takes in the parameter time and 	checks whether the time matches with any time which is stored already in the array. Setters and getters were 	also declared for this class.

	Class queue was also needed for this question in order to store the appointments, their times and which 	mechanic is assigned to them in order therefore a template class had to be created because of the multiple data 	types that had to be stored in the queue. This template class included IsEmpty(), IsFull(), Push(), Pop(), and 	DisplayQueue() functions.

main.cpp:

	For the main, variables of type string were created with names "Name" and "ID" to store the name and idea of 	the mechanic and customer temporarely (used for checks like availability and to exit loops), a count was also 	declared in order to keep count of both the number of customers and number of mechanics that are entered by the 	user. then, CustomerInfo and MechanicInfo were declared to classes customer and mechanic respectively in order 	to store the info of the mechanics and customers that are entered by the user. I decided to try a new way that 	would've been used to display the data by declaring 2 different queues and attempting to make them display the 	data at the same time so that it would be printed out in one line. The program then enters into a loop that 	allows the user to keep entering mechanic names until a "0" is entered which would exit the loop. The program 	then outputs all the mechanics in the list using a for loop which keeps incrementing until the i is greater 	than the count which is the number of mechanics entered. The user then enteres another loop that allows them to 	enter the name of the customer and the appointment time at which this customer has registered, if the name 	entered is "0" then the loop will be exited, else the data entered will be stored in the queue after the 	required checks. finally the code outputs all the customers that are currently in queue with appointments to 	see the mechanics.

Problems faced:

	I was not able to fully achieve what was required in the assignment, I couldn't find out how to assign each 	customer in the queue to a mechanic and if that mechanic is full then assign them to the next available 	mechanic. I also faced problems trying to compare the times of the two customers because I got lost on what i 	should be comparing (the time stored in the queue or comapar the times when the user inputs them). I was able 	to reach until the part the user enters the data but couldn't complete any further. If possible, I would like 	feedback on how I could fix this code and finish it.
